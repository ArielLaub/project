syntax = "proto3";

package LoanFinder;

import "./platform.proto";

message GetQuestionsRequest {
    string country_code = 1;
}

message GetQuestionsResponse {
    repeated Question questions = 1;
    
    message Question {
        int32 id = 1;
        string description = 2;
        int32 order_by = 3;
        repeated Option options = 4;
        
        message Option {
            int32 id = 1;
            string value = 2;
        }
    }
}

message FormFields {
    bool other_industry = 1;
    int32 exact_loan_amount = 2;
    int32 exact_business_established = 3;
    bool business_bank_account = 4;
    bool business_credit_card = 5;
    bool process_card = 6;
    bool process_over_2500 = 7;
    bool customers_other_businesses = 8;
    bool revenues_over_5m = 9;
    bool personal_guarantee = 10;
    map<string, string> answer = 11;

}

message GetQualifingLendersRequest {
    int32 account_id = 1;
    string affiliate_id = 2;
    string affiliate_sub_id = 3;
    FormFields form_fields = 5;
    string ip = 6;
}

message LoanOffer {
    string url = 1;
    int32 company_id = 2;
    string company_description = 3;
    repeated string company_requirements = 4 [packed=true];
    int32 company_types_id = 5;
    string funds_received = 6;
    string cost_rate = 7;
    string cost_period = 8;
    float trustpilot_rate = 9;
    int32 trustpilot_rates = 10;
    float trustpilot_stars = 11;
    string amount = 12;
    string terms = 13;
    string name = 14;
    string description = 15;
    string logo = 16;
    string loan_type = 17;
    string loan_type_description = 18;
    repeated string loan_type_benefits = 19;
    repeated string loan_type_drawbacks = 20; 
    int32 score = 21;
}

message GetQualifingLendersResponse {
    repeated LoanFinder.LoanOffer matches = 1;
}

message ApplicationResponse {
    repeated LoanFinder.LoanOffer results = 1;
    LoanFinder.FormFields form_fields = 2;
}

message SetCompanyInfoRequestResponse {
    int32 account_id = 1;
    string company_name = 2;
    string company_number = 3;
    string phone = 4;
    string postal_code = 5;
}

service Service {
    rpc getQuestions(LoanFinder.GetQuestionsRequest) returns(LoanFinder.GetQuestionsResponse);
    rpc getQualifingLenders(LoanFinder.GetQualifingLendersRequest) returns(LoanFinder.GetQualifingLendersResponse);
    rpc getAccountLastApplication(Platform.AccountIdRequest) returns(LoanFinder.ApplicationResponse);
    rpc setAccountCompanyInfo(LoanFinder.SetCompanyInfoRequestResponse) returns(LoanFinder.SetCompanyInfoRequestResponse);
}
